```{r imports}
library(tidyverse)
library(tidycensus)
library(fpp3)

files <- list.files("downloads", full.names = TRUE)
homicide_data <- tibble(series = c(), month = c(), homicides = c(), ori = c())

for(file_path in files){
  temp_file <- read.csv(file_path)|> slice(-2) |> # slice off the second junk row
    pivot_longer(cols = starts_with("X"), names_to = "month", values_to = "homicides")|> # pivot
    mutate(ori =  str_split(file_path, "[/.]")[[1]][2])|> # name ori column the ori from the filepath
    mutate(month = my(sub("^X", "", month))) # month year conversion
  # add in temp_file to total file
  homicide_data <- bind_rows(homicide_data, temp_file)
}
  
```

```{r mapping}
# bring in and join ai generated mappings, they look pretty good
mapping <- read.csv("ai_mappings.csv") 

vars <- c(
  median_household_income = "B19013_001",  # Median household income
  total_population        = "B01003_001"   # Total population
)

# Pull ACS data for all variables at county level for MN
acs_data <- get_acs(
  geography = "county",
  variables = vars,
  state = "MN",
  geometry = FALSE
) |>
  select(GEOID, variable, estimate) |>
  mutate(GEOID = as.numeric(GEOID))|>
  pivot_wider(names_from = variable, values_from = estimate)

homicide_data <- homicide_data|>
    left_join(mapping)|> # join in mapping variables
    left_join(acs_data)|> # join to acs data by county
    distinct(series, month, .keep_all = TRUE)|> # drop some duplicates left over
    group_by(month)|>drop_na(homicides)|> ungroup() # drop na years
```

```{r}
# total ts
homicide_data|> as_tsibble(index = month, key = series)|>
  summarise(homicides = sum(homicides), .groups = "drop") |>
  autoplot()

# yearly ts
homicide_data |> 
  mutate(year = year(month)) |> 
  group_by(year) |> 
  summarise(homicides = sum(homicides), .groups = "drop") |> 
  as_tsibble(index = year) |> 
  autoplot()

# only modern data after 2013 crime reporting changes
homicide_data|> as_tsibble(index = month, key = c(series))|>
  summarise(homicides = sum(homicides), .groups = "drop") |>
  filter(year(month)>=2013)|>
  autoplot()

# only modern data after 2013 crime reporting changes stl decomp
homicide_data|> 
  mutate(month = yearmonth(month))|>
  as_tsibble(index = month, key = c(series))|>
  summarise(homicides = sum(homicides), .groups = "drop") |>
  filter(year(month)>=2013)|>
  model(stl = STL(homicides))|>
  components()|>
  autoplot()
```
