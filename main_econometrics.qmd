```{r imports}
#| verbose: False
#| warning: False

library(tidyverse)
library(tidycensus)

library(fpp3)
library(sf)

library(patchwork)

library(lme4)

acs_5_yearly_data <- readRDS("data/acs_5_yearly_data.rds")
acs_1_yearly_data <- readRDS("data/acs_1_yearly_data.rds")
mapping_yearly_data <- readRDS("data/mapping_yearly_data.rds")
crime_data <- readRDS("data/crime_data_merged.rds")
```

```{r homicides_and_pop_spatial_time_series}
#| warning: False
  
plot_census_data <- function(year_to_plot){
  
  map_data <- mapping_yearly_data|>
    filter(year == year_to_plot)
  
  # Plot homicides
  homicides_plot <- ggplot(map_data) +
    geom_sf(aes(fill = homicides), color = "white") +  # white borders between counties
    scale_fill_viridis_c(option = "plasma", trans = "log10", 
                         name = "homicides") +        # log scale for better contrast
    labs(
      title = paste("     Homicides in", year_to_plot),
      caption = "Source: FBI Crime data"
    ) +
    theme_minimal() +
    theme(axis.text = element_blank(),
          axis.ticks = element_blank(),
          legend.position = "none")
  
  # Plot acs 5 pop
  pop5_plot <- map_data|>
    drop_na(total_population_acs5)|>
    ggplot() +
    geom_sf(aes(fill = total_population_acs5), color = "white") +  # white borders between counties
    scale_fill_viridis_c(option = "plasma", trans = "log10", 
                         name = "Total Population") +        # log scale for better contrast
    labs(
      title = paste("Population in", year_to_plot),
      caption = "Source: ACS 5 estimates"
    ) +
    theme_minimal() +
    theme(axis.text = element_blank(),
          axis.ticks = element_blank(),
          legend.position = "none")
  
  # Plot acs 1 pop
  pop1_plot <- map_data|>
    ggplot() +
    geom_sf(aes(fill = total_population_acs1), color = "white") +  # white borders between counties
    scale_fill_viridis_c(option = "plasma", trans = "log10", 
                         name = "Total Population") +        # log scale for better contrast
    labs(
      title = paste("Population in", year_to_plot),
      caption = "Source: ACS 1 estimates"
    ) +
    theme_minimal() +
    theme(axis.text = element_blank(),
          axis.ticks = element_blank(),
          legend.position = "none")
  
  return(pop5_plot + pop1_plot + homicides_plot)
}

# demonstrate the diffs between acs5 and acs1
# showing that homicides rarely occur outside of >65k pop counties
plot_census_data(2023)

acs_1_yearly_data|>
  group_by(county)|>
  count()|>
  arrange(n)
```

```{r homicides_time_series}
# Monthly totals
monthly_ts <- crime_data |>
  group_by(month) |>
  summarise(homicides = sum(homicides), .groups = "drop") |>
  mutate(type = "Monthly")  # Add type for plotting

# Yearly totals
yearly_ts <- crime_data |>
  group_by(year, county) |>
  summarise(
    population = first(total_population_acs1),  # take one value per county
    homicides = sum(homicides, na.rm = TRUE),
    .groups = "drop"
  ) |>
  group_by(year) |>
  summarise(
    population = sum(population, na.rm = TRUE),  # now only sum once per county
    homicides = sum(homicides, na.rm = TRUE),
    .groups = "drop"
  ) |>
  mutate(
    month = as.Date(paste0(year, "-01-01")),
    type = "Yearly"
  ) |>
  select(month, homicides, population, type)

# plotting df
combined_ts <- bind_rows(monthly_ts, yearly_ts)



# show the reasons for using yearly data due to how monthly is reported
ggplot(combined_ts, aes(x = month, y = homicides, color = type)) +
  geom_line(size = 1) +
  geom_point(data = subset(combined_ts, type == "Yearly"), size = 2) +  # emphasize yearly points
  scale_color_manual(values = c("Monthly" = "steelblue", "Yearly" = "darkblue")) +
  theme_minimal() +
  labs(title = "Minnesota Homicides Over Time", x = "Date", y = "Homicides", color = "Time Period")



# refactor yearly_ts data to only contain acs1 counties to compare homicide rates to population counts
yearly_ts <- acs_1_yearly_data|>
  group_by(year)|>
  summarise(population = sum(total_population_acs1),
            homicides_pc = sum(homicides)/sum(total_population_acs1),
            across(c(arson, assaults, burglary, gta, homicides, larceny, rape, robbery), sum))|>
  mutate(crime_rate = (arson+assaults+burglary+gta+homicides+larceny+rape+robbery)/population)
  


# show homicides vs population relationship
# Compute a scaling factor to map population into homicide scale
scale_factor <- max(yearly_ts$crime_rate, na.rm = TRUE) / max(yearly_ts$population, na.rm = TRUE)

ggplot(yearly_ts, aes(x = year)) +
  # Population line (left axis, true scale)
  geom_line(aes(y = population, color = "Population"), size = 1, linetype = "dashed") +
  geom_point(aes(y = population, color = "Population"), size = 2) +
  
  # Homicides line (right axis, scaled down)
  geom_line(aes(y = crime_rate / scale_factor, color = "General Crime Rate"), size = 1) +
  geom_point(aes(y = crime_rate / scale_factor, color = "General Crime Rate"), size = 2) +
  
  scale_y_continuous(
    name = "Population",
    sec.axis = sec_axis(~ . * scale_factor, name = "General Crime Rate")
  ) +
  scale_color_manual(
    values = c("Population" = "firebrick", "General Crime Rate" = "purple")
  ) +
  theme_minimal() +
  labs(
    title = "Minnesota Population vs Crime Rates Over Time for ACS1 Counties",
    x = "Year",
    color = "",
    caption = "Source: ACS1 estimates; using Decennial counts for 2020"
  )


scale_factor <- max(yearly_ts$homicides_pc, na.rm = TRUE) / max(yearly_ts$crime_rate, na.rm = TRUE)

ggplot(yearly_ts, aes(x = year)) +
  # Homicides per capita (true scale, left axis)
  geom_line(aes(y = homicides_pc, color = "Homicides per Capita"), size = 1) +
  geom_point(aes(y = homicides_pc, color = "Homicides per Capita"), size = 2) +
  
  # General crime rate (scaled, right axis)
  geom_line(aes(y = crime_rate * scale_factor, color = "General Crime Rate"), size = 1, linetype = "dashed") +
  geom_point(aes(y = crime_rate * scale_factor, color = "General Crime Rate"), size = 2) +
  
  # Two axes
  scale_y_continuous(
    name = "Homicides per Capita",
    sec.axis = sec_axis(~ . / scale_factor, name = "General Crime Rate")
  ) +
  
  # Colors and labels
  scale_color_manual(
    values = c("Homicides per Capita" = "darkblue", 
               "General Crime Rate" = "purple")
  ) +
  theme_minimal() +
  labs(
    title = "Homicides per Capita vs General Crime Rate (ACS1 Counties)",
    x = "Year",
    color = "",
    caption = "Source: FBI Crime data and ACS1 estimates"
  )



acs_1_yearly_data|>
  ggplot(aes(x = homicides/total_population_acs1))+
  geom_density()+
  theme_minimal()+
  labs(title = "Density of Minnesota Homicides by County by Year", 
       x = "Homicides per Capita per Year", y = NULL, 
       caption = "Source: FBI Crime data, and ACS1 estimates; using Decennial counts for 2020")

acs_1_yearly_data|>
  ggplot(aes(x = crime_rate))+
  geom_density()+
  theme_minimal()+
  labs(title = "Density of Minnesota Crime Rates by County by Year", 
       x = "Crimes per Capita per Year", y = NULL, 
       caption = "Source: FBI Crime data, and ACS1 estimates; using Decennial counts for 2020")
```

```{r acs_1_pre_modeling_comparisons}
### vars to calculate stats across for modeling
modeling_vars <- c(
  "homicide_rate", "crime_rate", "periods", "post_covid", "msp_main_counties",
  "officers", "median_household_income_acs1", "pct_lessthan_5kincome", 
  "pct_highschool_or_greater", "pct_children_missing_parents", 
  "pct_non_white", "Binge.drinking.prevalence", "pct_young_males", 
  "persons_per_household", "persons_per_m2"
)

### Descriptive stats
means <- acs_1_yearly_data |>
  summarise(across(all_of(modeling_vars), ~ mean(.x, na.rm = TRUE)))

sds <- acs_1_yearly_data |>
  summarise(across(all_of(modeling_vars), ~ sd(.x, na.rm = TRUE)))

bind_rows(list(mean = means, sd = sds), .id = "stat")|>
  select(-periods, -post_covid, -msp_main_counties)|>
  pivot_longer(-stat, names_to = "variable", values_to = "value")|>
  pivot_wider(names_from = "stat")

### correlation matrix
# cor is off because of serial and inter county correlation
target <- "homicide_rate"
lapply(setdiff(modeling_vars, target), function(var) {
  test <- cor.test(
    acs_1_yearly_data[[target]],
    acs_1_yearly_data[[var]],
    method = "pearson"
  )
  data.frame(
    variable = var,
    estimate = test$estimate,
    p.value = test$p.value
  )
}) |> bind_rows()
```

```{r modeling}
# starting mixed effects model with one measure of each social disorganization factor
# random effect by county to allow for different relationships
# simple periods variable to account for time series
model_lag1 <- lmer(crime_rate ~ officers + pct_lessthan_5kincome +
              pct_highschool_or_greater + pct_children_missing_parents + pct_non_white +
            Binge.drinking.prevalence + pct_young_males + persons_per_m2 +
               periods + crime_rate_lag1 + (1 | county), data = acs_1_yearly_data)

# many insignificant predictors
summary(model_lag1)
plot(model_lag1)

qqnorm(resid(model_lag1))
qqline(resid(model_lag1), col = "red")
```

```{r acs_5_pre_modeling_comparisons}
### vars to calculate stats across for modeling
modeling_vars <- c(
  "homicide_rate", "crime_rate",
  "officers", "median_household_income_acs5", "pct_lessthan_5kincome", 
  "pct_highschool_or_greater", "pct_children_missing_parents", 
  "pct_non_white", "Binge.drinking.prevalence", "pct_young_males", 
  "persons_per_household", "persons_per_m2"
)

### t test across pre/post covid for all explanatory variables
pvals <- acs_5_yearly_data |>
  select(all_of(modeling_vars), post_covid) |>
  pivot_longer(-post_covid, names_to = "variable", values_to = "value") |>
  group_by(variable) |>
  summarise(
    ttest = list(t.test(value ~ post_covid, data = cur_data(), var.equal = FALSE)),
    .groups = "drop"
  ) |>
  mutate(p.value = map_dbl(ttest, ~ .x$p.value)) |>
  select(variable, p.value)

### Descriptive stats
summary_stats <- lapply(c(0,1), function(covid_indicatior){
  means <- acs_5_yearly_data |>
    filter(post_covid == covid_indicatior)|>
  summarise(across(all_of(modeling_vars), ~ mean(.x, na.rm = TRUE)))

  sds <- acs_5_yearly_data |>
    filter(post_covid == covid_indicatior)|>
    summarise(across(all_of(modeling_vars), ~ sd(.x, na.rm = TRUE)))
  
  bind_rows(list(mean = means, sd = sds), .id = "stat")|>
    pivot_longer(-stat, names_to = "variable", values_to = "value")|>
    pivot_wider(names_from = "stat")
  
})|> bind_rows(.id = "year")|> 
  mutate(year = ifelse(year == "1", "pre", "post"))|>
  pivot_wider(names_from = "year", values_from = c(mean, sd))

summary_stats <- left_join(summary_stats, pvals)|>
  arrange(p.value)
summary_stats


### correlation matrix
# cor is off because of serial and inter county correlation
target <- "crime_rate"
lapply(setdiff(modeling_vars, target), function(var) {
  test <- cor.test(
    acs_5_yearly_data[[target]],
    acs_5_yearly_data[[var]],
    method = "pearson"
  )
  data.frame(
    variable = var,
    estimate = test$estimate,
    p.value = test$p.value
  )
}) |> bind_rows()|> arrange(p.value)
```

















